<?xml version='1.0' encoding='UTF-8'?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_MulQuat_Test" Id="{3ca776e9-2bcf-452c-96f2-6ef79e897dc4}" SpecialFunc="None">
    <Declaration><![CDATA[
FUNCTION_BLOCK FB_MulQuat_Test EXTENDS FB_TestSuite
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
TestInputVec4ExpectCorrectResult();
]]></ST>
    </Implementation>
    <Method Name="TestInputVec4ExpectCorrectResult" Id="{cec71369-7b70-4825-9625-0f31fa090360}">
      <Declaration><![CDATA[
METHOD PRIVATE TestInputVec4ExpectCorrectResult
VAR
    fbQ1 : FB_Quaternion;
    fbQ2 : FB_Quaternion;
    fbQ3 : FB_Quaternion;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
TEST('TestInputVec4ExpectCorrectResult');

fbQ1.Set(1, 2, 3, 4);
fbQ2.Set(0.217115689381933, -0.00950871632329635, 0.01743264659271, -0.00316957210776545);
fbQ3.Set(2, -1, -5, 2);

fbQ1 := F_MulQuat(fbQ1, fbQ2);
fbQ3 := F_MulQuat(fbQ3, fbQ1);

// Q1
AssertEquals_LREAL(
    Expected := 0.196513470681458,
    Actual := fbQ1.w,
    Delta := 1e-10,
    Message := 'Quaternion 1 [w] was not the expected value.'
);

AssertEquals_LREAL(
    Expected := 0.345483359746434,
    Actual := fbQ1.x,
    Delta := 1e-10,
    Message := 'Quaternion 1 [x] was not the expected value.'
);

AssertEquals_LREAL(
    Expected := 0.637083993660856,
    Actual := fbQ1.y,
    Delta := 1e-10,
    Message := 'Quaternion 1 [y] was not the expected value.'
);

AssertEquals_LREAL(
    Expected := 0.928684627575277,
    Actual := fbQ1.z,
    Delta := 1e-10,
    Message := 'Quaternion 1 [z] was not the expected value.'
);

// Q2
AssertEquals_LREAL(
    Expected := 0.217115689381933,
    Actual := fbQ2.w,
    Delta := 0.0,
    Message := 'Quaternion 2 [w] was not the expected value.'
);

AssertEquals_LREAL(
    Expected := -0.00950871632329635,
    Actual := fbQ2.x,
    Delta := 0.0,
    Message := 'Quaternion 2 [x] was not the expected value.'
);

AssertEquals_LREAL(
    Expected := 0.01743264659271,
    Actual := fbQ2.y,
    Delta := 0.0,
    Message := 'Quaternion 2 [y] was not the expected value.'
);

AssertEquals_LREAL(
    Expected := -0.00316957210776545,
    Actual := fbQ2.z,
    Delta := 0.0,
    Message := 'Quaternion 2 [z] was not the expected value.'
);

// Q3
AssertEquals_LREAL(
    Expected := 2.06656101426307,
    Actual := fbQ3.w,
    Delta := 1e-10,
    Message := 'Quaternion 3 [w] was not the expected value.'
);

AssertEquals_LREAL(
    Expected := -5.42313787638669,
    Actual := fbQ3.x,
    Delta := 1e-10,
    Message := 'Quaternion 3 [x] was not the expected value.'
);

AssertEquals_LREAL(
    Expected := 1.91125198098257,
    Actual := fbQ3.y,
    Delta := 1e-10,
    Message := 'Quaternion 3 [y] was not the expected value.'
);

AssertEquals_LREAL(
    Expected := 3.34072900158479,
    Actual := fbQ3.z,
    Delta := 1e-10,
    Message := 'Quaternion 3 [z] was not the expected value.'
);

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>