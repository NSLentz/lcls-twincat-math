<?xml version='1.0' encoding='UTF-8'?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_RotateVec3_Test" Id="{d86f82e1-ca08-4636-927e-352491bfba5e}" SpecialFunc="None">
    <Declaration><![CDATA[
FUNCTION_BLOCK FB_RotateVec3_Test EXTENDS FB_TestSuite
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
TestRandInputExpectCorrectResult();
]]></ST>
    </Implementation>
    <Method Name="TestRandInputExpectCorrectResult" Id="{86aee5ed-e274-4192-8d26-d682a4f0a453}">
      <Declaration><![CDATA[
METHOD PRIVATE TestRandInputExpectCorrectResult
VAR
    fbQ1 : FB_Quaternion;
    fbV1 : FB_Vec3;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
TEST('TestRandInputExpectCorrectResult');

//fbQ1.Set(-0.499965221779343, 0.383023912780829, 0.412035378111750, 0.405492550516440);
//fbV1.Set(-0.363780750881015, -0.599272040041946, -0.589588991418034);
fbQ1.Set(1, 0, 1, 0);
fbV1.Set(1, 1, 1);
fbV1 := F_RotateVec3(
    iQuat := fbQ1,
    iVec3 := fbV1
);

AssertEquals_LREAL(
    Expected := -1,
    Actual := fbV1.x,
    Delta := 1e-10,
    Message := 'Vector 1 [x] was not the expected value.'
);

AssertEquals_LREAL(
    Expected := 1,
    Actual := fbV1.y,
    Delta := 1e-10,
    Message := 'Vector 1 [y] was not the expected value.'
);

AssertEquals_LREAL(
    Expected := 1,
    Actual := fbV1.z,
    Delta := 1e-10,
    Message := 'Vector 1 [z] was not the expected value.'
);

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>